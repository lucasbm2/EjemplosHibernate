<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD//EN" "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <!-- Especifica el controlador JDBC que se usará para conectarse a la base de datos. -->
        <!-- Usar para MySQL. Otros valores posibles: org.postgresql.Driver (PostgreSQL), oracle.jdbc.OracleDriver (Oracle), etc. -->
        <property name="hibernate.connection.driver_class">
            com.mysql.cj.jdbc.Driver
        </property>

        <!-- URL de conexión a la base de datos.
             Puedes añadir parámetros como createDatabaseIfNotExist=true para que la base de datos se cree si no existe. -->
        <property name="hibernate.connection.url">
            jdbc:mysql://lucasbarchin2.heliohost.us:3306/lucasbarchin2_hibernate_clase?createDatabaseIfNotExist=true
        </property>

        <!-- Usuario de la base de datos para establecer la conexión. -->
        <property name="hibernate.connection.username">lucasbarchin2_lucas_hibernate</property>

        <!-- Contraseña del usuario especificado. -->
        <property name="hibernate.connection.password">root1234</property>

        <!-- Número máximo de conexiones activas en el pool. -->
        <!-- Valores típicos: entre 10 y 100, dependiendo del entorno. -->
        <property name="hibernate.connection.pool_size">50</property>

        <!-- Muestra las consultas SQL generadas en la consola. -->
        <property name="show_sql">true</property>

        <!-- Formatea las consultas SQL para que sean más legibles en la consola. -->
        <property name="hibernate.format_sql">true</property>

        <!-- Agrega comentarios en las consultas SQL para facilitar la depuración. -->
        <property name="hibernate.use_sql_comments">true</property>

        <!-- Controla cómo Hibernate gestiona el esquema de la base de datos. -->
        <!--Opciones:
            - none: No realiza cambios en la base de datos.
            - validate: Valida el esquema existente sin modificarlo.
            - update: Actualiza el esquema sin eliminar datos existentes.
            - create: Crea el esquema desde cero, eliminando datos existentes.
            - create-drop: Crea el esquema y lo elimina al cerrar la sesión.
            - export: Exporta el esquema a la base de datos.
        -->
        <property name="hibernate.hbm2ddl.auto">create</property>
        <property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
        <!-- Asocia la clase de entidad Employee con Hibernate para que se mapee a una tabla en la base de datos. -->
        <mapping class="com.example.model.Employee" />
        <mapping class="com.example.model.Producto" />
    </session-factory>
</hibernate-configuration>